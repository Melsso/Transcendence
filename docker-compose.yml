version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: ./backend
    container_name: pong-backend-container
    command: > 
      sh -c "
      while ! nc -z database 5432; do 
        echo 'Waiting for db...';
        sleep 1; 
      done; 
      echo 'Db is up, running migrations...';
      python3 api/manage.py makemigrations; 
      python3 api/manage.py migrate;
      echo 'Starting Daphne...';
      cd api && daphne -b 0.0.0.0 -p 8000 api.asgi:application"     
    volumes:
      - ./backend:/app
      - ./backend/api/media:/app/api/media
    depends_on:
      - database
      - redis
    env_file:
      - .env
    networks:
      - pong-network
    restart: on-failure

  # Database service
  database:
    build:
      context: ./database
    container_name: pong-database-container
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - pong-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
    container_name: pong-frontend-container
    volumes:
      - ./backend/api/media:/usr/share/nginx/html/media
    environment:
      - ACTIVE_HOST=${ACTIVE_HOST}
    ports:
      - "0.0.0.0:80:80"
    depends_on:
      - backend
    networks:
      - pong-network
    restart: on-failure
  
  # Redis service
  redis:
    image: redis:alpine
    container_name: pong-redis-container
    ports:
      - "0.0.0.0:6379:6379"
    networks:
      - pong-network

volumes:
  postgres_data:

networks:
  pong-network:
    driver: bridge

